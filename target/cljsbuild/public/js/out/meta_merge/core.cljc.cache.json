["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$meta-merge.core","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$meta*",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","~:line",4,"~:column",8,"~:end-line",4,"~:end-column",13,"~:private",true,"~:arglists",["~#list",["~$quote",["^H",[["~$obj"]]]]],"~:doc","Returns the metadata of an object, or nil if the object cannot hold\n  metadata."],"^F",true,"^5","~$meta-merge.core/meta*","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",13,"~:method-params",["^H",[["^J"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^C",1,"~:variadic?",false,"^B",4,"~:ret-tag",["^4",["~$clj-or-nil","~$clj-nil"]],"^D",4,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns the metadata of an object, or nil if the object cannot hold\n  metadata."],"~$with-meta*",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",13,"^C",8,"^D",13,"^E",18,"^F",true,"^G",["^H",["^I",["^H",[["^J","~$m"]]]]],"^K","Returns an object of the same type and value as obj, with map m as its\n  metadata if the object can hold metadata."],"^F",true,"^5","~$meta-merge.core/with-meta*","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",18,"^M",["^H",[["^J","~$m"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",13,"^Q",["^4",[null,"~$clj","~$cljs.core/MetaFn","^S"]],"^D",13,"^T",2,"^U",true,"^G",["^H",["^I",["^H",[["^J","~$m"]]]]],"^K","Returns an object of the same type and value as obj, with map m as its\n  metadata if the object can hold metadata."],"~$displace?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",22,"^C",8,"^D",22,"^E",17,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as displaceable"],"^F",true,"^5","~$meta-merge.core/displace?","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",17,"^M",["^H",[["^J"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",22,"^Q","~$any","^D",22,"^T",1,"^U",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as displaceable"],"~$replace?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",27,"^C",8,"^D",27,"^E",16,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as replaceable"],"^F",true,"^5","~$meta-merge.core/replace?","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",16,"^M",["^H",[["^J"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",27,"^Q","^10","^D",27,"^T",1,"^U",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as replaceable"],"~$top-displace?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",32,"^C",8,"^D",32,"^E",21,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as top-displaceable"],"^F",true,"^5","~$meta-merge.core/top-displace?","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",21,"^M",["^H",[["^J"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",32,"^Q","^10","^D",32,"^T",1,"^U",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^K","Returns true if the object is marked as top-displaceable"],"~$different-priority?",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",37,"^C",8,"^D",37,"^E",27,"^F",true,"^G",["^H",["^I",["^H",[["~$left","~$right"]]]]],"^K","Returns true if either left has a higher priority than right or vice versa."],"^F",true,"^5","~$meta-merge.core/different-priority?","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",27,"^M",["^H",[["^16","^17"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",37,"^Q","~$boolean","^D",37,"^T",2,"^U",true,"^G",["^H",["^I",["^H",[["^16","^17"]]]]],"^K","Returns true if either left has a higher priority than right or vice versa."],"~$remove-top-displace",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",44,"^C",8,"^D",44,"^E",27,"^F",true,"^G",["^H",["^I",["^H",[["^J"]]]]]],"^F",true,"^5","~$meta-merge.core/remove-top-displace","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",27,"^M",["^H",[["^J"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",44,"^Q",["^4",[null,"^10"]],"^D",44,"^T",1,"^U",true,"^G",["^H",["^I",["^H",[["^J"]]]]]],"~$pick-prioritized",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",49,"^C",8,"^D",49,"^E",24,"^F",true,"^G",["^H",["^I",["^H",[["^16","^17"]]]]],"^K","Picks the highest prioritized element of left and right and merge their\n  metadata."],"^F",true,"^5","~$meta-merge.core/pick-prioritized","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",24,"^M",["^H",[["^16","^17"]]],"^N",null,"^O",["^H",[null,null]],"^C",1,"^P",false,"^B",49,"^Q",["^4",[null,"^X","^10","^Y","^S"]],"^D",49,"^T",2,"^U",true,"^G",["^H",["^I",["^H",[["^16","^17"]]]]],"^K","Picks the highest prioritized element of left and right and merge their\n  metadata."],"~$meta-merge",["^ ","^?",null,"^@",["^ ","^A","/home/koompi/projects/kramaos/kramaos-reagent/target/cljsbuild/public/js/out/meta_merge/core.cljc","^B",80,"^C",7,"^D",80,"^E",17,"^G",["^H",["^I",["^H",[[],["^16"],["^16","^17"],["^16","^17","~$&","~$more"]]]]],"^K","Recursively merge values based on the information in their metadata.","~:top-fn",["^ ","^P",true,"^T",2,"^M",["^H",[[],["^16"],["^16","^17"]]],"^G",["^H",[[],["^16"],["^16","^17"],["^16","^17","~$&","^1?"]]],"^O",["^H",[null,null,null,null]]]],"^5","~$meta-merge.core/meta-merge","^A","target/cljsbuild/public/js/out/meta_merge/core.cljc","^E",17,"^1@",["^ ","^P",true,"^T",2,"^M",["^H",[[],["^16"],["^16","^17"]]],"^G",["^H",[[],["^16"],["^16","^17"],["^16","^17","~$&","^1?"]]],"^O",["^H",[null,null,null,null]]],"^M",["^H",[[],["^16"],["^16","^17"]]],"^N",null,"^O",["^H",[null,null,null,null]],"^C",1,"^P",true,"^B",80,"^D",80,"^T",2,"^U",true,"^G",["^H",[[],["^16"],["^16","^17"],["^16","^17","~$&","^1?"]]],"^K","Recursively merge values based on the information in their metadata."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:top-displace","~:else","~:replace","~:prepend","~:displace"]],"~:order",["^1J","^1H","^1F","^1I","^1G"]],"^K",null]